<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Presentation</name>
    </assembly>
    <members>
        <member name="T:Presentation.Configure.MyConfigurationExtension">
            <summary>
            MyConfigurationExtension
            </summary>
        </member>
        <member name="M:Presentation.Configure.MyConfigurationExtension.UseMySwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            OpenApi
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyConfigurationExtension.UseIndex(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)">
            <summary>
            配置起始页
            </summary>
            <param name="app"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Presentation.Configure.MyServiceExtension">
            <summary>
            MyServiceExtension
            </summary>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddMySwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddMySwagger
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddMyRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            redis
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddMyMysql(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            mysql
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Repository
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddPieplineBehavior(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            PieplineBehavior
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddCORS(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Cors
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Configure.MyServiceExtension.AddJWT(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            JWT
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:Presentation.Controllers.File.ImageController">
            <summary>
            图片
            </summary>
        </member>
        <member name="M:Presentation.Controllers.File.ImageController.#ctor(MediatR.IMediator)">
            <summary>
            构造函数
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:Presentation.Controllers.File.ImageController.GetImageAsync(System.Nullable{System.Int32})">
            <summary>
            图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.File.ImageController.PutImageAsync">
            <summary>
            图片
            </summary>
            <returns></returns>
        </member>
        <member name="T:Presentation.Controllers.MainController">
            <summary>
            主控制器
            </summary>
        </member>
        <member name="M:Presentation.Controllers.MainController.#ctor(Microsoft.Extensions.Logging.ILogger{Presentation.Controllers.MainController},MediatR.IMediator,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
            <param name="mediator"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Presentation.Controllers.MainController.GetAsync">
            <summary>
            Main-Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.MainController.Authenticate">
            <summary>
            验证与授权
            </summary>
            <returns></returns>
        </member>
        <member name="T:Presentation.Controllers.TestRedisController">
            <summary>
            Redis测试控制器
            </summary>
        </member>
        <member name="M:Presentation.Controllers.TestRedisController.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Presentation.Controllers.TestRedisController.TestGetAsync">
            <summary>
            Get
            </summary>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.TestRedisController.TestPostAsync">
            <summary>
            Post
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
